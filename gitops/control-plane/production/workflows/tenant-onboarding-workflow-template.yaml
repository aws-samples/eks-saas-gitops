apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: tenant-onboarding-template
  namespace: argo-workflows
spec:
  serviceAccountName: argoworkflows-sa # SA with IRSA permissions
  templates:
    - name: validate-if-tenant-exists
      container:
        image: "${ecr_argoworkflow_container}:0.1"
        command: ["/bin/sh","-c"]
        args: ['./00-validate-tenant.sh "$TENANT_ID"']
        volumeMounts:
        - name: workdir
          mountPath: /mnt/vol
        env:
          - name: TENANT_ID
            value: "{{workflow.parameters.TENANT_ID}}"
          - name: GIT_USERNAME
            value: "{{workflow.parameters.GIT_USERNAME}}"
          - name: GIT_TOKEN
            value: "{{workflow.parameters.GIT_TOKEN}}"
    - name: clone-repository
      container:
        image: "${ecr_argoworkflow_container}:0.1"
        command: ["/bin/sh","-c"]
        args: ['./01-tenant-clone-repo.sh "$REPO_URL" "$GIT_BRANCH" "$GIT_USERNAME" "$GIT_TOKEN" && cp -r eks-saas-gitops /mnt/vol/eks-saas-gitops']
        volumeMounts:
        - name: workdir
          mountPath: /mnt/vol
        env:
          - name: REPO_URL
            value: "{{workflow.parameters.REPO_URL}}"
          - name: GIT_BRANCH
            value: "{{workflow.parameters.GIT_BRANCH}}"
          - name: GIT_USERNAME
            value: "{{workflow.parameters.GIT_USERNAME}}"
          - name: GIT_TOKEN
            value: "{{workflow.parameters.GIT_TOKEN}}"
    - name: create-tenant-helm-release
      container:
        image: "${ecr_argoworkflow_container}:0.1"
        command: ["/bin/sh","-c"]
        args: ['./02-tenant-onboarding.sh "$TENANT_ID" "$RELEASE_VERSION" "$TENANT_TIER" "$GIT_USER_EMAIL" "$GIT_USERNAME" "$GIT_BRANCH" "$GIT_TOKEN"']
        volumeMounts:
        - name: workdir
          mountPath: /mnt/vol
        env:
          - name: TENANT_ID
            value: "{{workflow.parameters.TENANT_ID}}"
          - name: RELEASE_VERSION
            value: "{{workflow.parameters.RELEASE_VERSION}}"
          - name: TENANT_TIER
            value: "{{workflow.parameters.TENANT_TIER}}"
          - name: GIT_USER_EMAIL
            value: "{{workflow.parameters.GIT_USER_EMAIL}}"
          - name: GIT_USERNAME
            value: "{{workflow.parameters.GIT_USERNAME}}"
          - name: GIT_BRANCH
            value: "{{workflow.parameters.GIT_BRANCH}}"
          - name: GIT_TOKEN
            value: "{{workflow.parameters.GIT_TOKEN}}"
  volumeClaimTemplates:
  - metadata:
      name: workdir
    spec:
      storageClassName: gp2
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi